<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAgregarCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAATNJREFUSEu9
        lFGVAjEMRUcCEpCABCQgAQfgACSsA1YCDnYdgANwAA7g3Y/s6YR0Okvm8M65H5O2eZ02TdfQTGzETwHf
        xCfTQtzEI4A442mx45qJwXj6z7YiSu5hXkq/IkrsYV5KdxEl9lxESmONmJfSx47uW0SJPcxLaS2ixB7m
        pcT7aN0T45N0iL2IDAzGJ1OtKNJF4LUUkRFxE8eXbrwrMWREMQw13maxzMVOREnOAqUqE4ODiBYY/CXH
        4jdh9+aL6KXL04lrx1CCou5eM4K/Lj+2E1iyshpJDHZE3J/FeuuiHdSIjIbUW3ctAi0iI4oGyj+yWG/d
        f4y4Q/TWHX0VgTFY1fleWDPq9UQGW03UOAmUekdWMUfBDnmc0WIrV5LUNkg8NHlXHAvGbMzgu3ikXfcE
        b45HxM6khyQAAAAASUVORK5CYII=
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAFPSURBVEhLvZWLUcMwEERdAiVQAiXQSSiFDkgHpIOkA9JB6CB0QDqAfZ4cc6OsZGFnvDNv/Dvd
        2ifpPHToRbyLjyucb8Td9CBI/FOBZ8Qs1qdwBhnMFolyucQOYmdrJ1xSB7GzdRQuqYPY2boIl9RB7Gyt
        9kWrzdFqq46N2DNPxCzetK/CJc8Qcxe1ugPPanoSdI238apDlMWZwKNwwuRZROlpwl36EqUJ92piuZ9E
        NtuKpgguTQLePCvKxZdS1mx2EFYsWQKdQUCyWHGYfAvunwUG2ax8qdGAwDJpSc0k4BoDysjxTwxq/eQy
        UyYB8xhxo7iYKlOQN2jLhLibcjFRLtgR7ebfJsgF14i9Q/li6WaqJsgNcJAcYcaYUDxvmqCengbR1yhf
        3hcYTJqEGOw6QCaWKSbMz/565Eu7TLIYgClvzx7IhDjHjLhavys0DL+wezLPPs7XNwAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAEmSURBVEhLvZVdlQIxDEZHAhKQsBKQgAQcsA5AAg5AAg7AAesAHIAD+O5DOJ1uOi2TOXzn3IdJ
        m6Q/aaaraCbW4pTAN/bJ9CPu4umAnfGwWHEpicF4eGe/wguew7yQzsILnMO8kB7CC5xzFSG1JmJeSF87
        uoPwAucwL6SV8ALnMC8k3kftnhifpENshZfAYHwylYoiXAS5FsJLhN3E8YUb71IMJaIYhhpvtVjmYiO8
        IH8ChSqTBHvhORjskmOpdXfjX5enE7c4o9bubry7fGsnsGpLq5EyL9HzSw01vERD6vndEkMNLxFFU6Ln
        90ki7hCNuqNdYmjBqu6Tf9a76rinVseLQKF3xIsn6VFwrjxOz9nKlSClBWJ3k4wVx0JiFmbwnTzSrnsB
        qfJQdTfBzKsAAAAASUVORK5CYII=
</value>
  </data>
</root>